AWSTemplateFormatVersion: '2010-09-09'
Description: 'Infrastructure for Todo List Application - DynamoDB Table and S3 Bucket'

Parameters:
  Environment:
    Type: String
    Default: 'dev'
    Description: Environment name (dev, staging, prod)
    AllowedValues:
      - dev
      - staging
      - prod

Resources:
  # DynamoDB Table for Todo Items
  TodoItemsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub 'TodoItems-${Environment}'
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      Tags:
        - Key: Application
          Value: TodoApp
        - Key: Environment
          Value: !Ref Environment

  # S3 Bucket for CSV Exports
  TodoExportsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'todo-exports-${AWS::AccountId}-${Environment}'
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldExports
            Status: Enabled
            ExpirationInDays: 7
            NoncurrentVersionExpirationInDays: 1
      VersioningConfiguration:
        Status: Suspended
      Tags:
        - Key: Application
          Value: TodoApp
        - Key: Environment
          Value: !Ref Environment

  # S3 Bucket for Builds 
  TodoBuildsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'todo-builds-${AWS::AccountId}-${Environment}'
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldBuilds
            Status: Enabled
            ExpirationInDays: 14
            NoncurrentVersionExpirationInDays: 1
      VersioningConfiguration:
        Status: Suspended
      Tags:
        - Key: Application
          Value: TodoApp
        - Key: Environment
          Value: !Ref Environment

  # SNS Topic for Todo Notifications
  TodoNotificationsTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub 'todo-notifications-${Environment}'
      DisplayName: !Sub 'Todo Notifications - ${Environment}'
      KmsMasterKeyId: alias/aws/sns
      Tags:
        - Key: Application
          Value: TodoApp
        - Key: Environment
          Value: !Ref Environment

  # SQS Queue for Todo Exports
  TodoExportsQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub 'todo-exports-${Environment}'
      KmsMasterKeyId: alias/aws/sqs
      MessageRetentionPeriod: 1209600  # 14 days
      VisibilityTimeout: 120 # 120 seconds
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt TodoExportsDeadLetterQueue.Arn
        maxReceiveCount: 3
      Tags:
        - Key: Application
          Value: TodoApp
        - Key: Environment
          Value: !Ref Environment

  # Dead Letter Queue for Todo Exports
  # (Messages that fail repeatedly in the Exports queue go here for review)
  TodoExportsDeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub 'todo-exports-dlq-${Environment}'
      KmsMasterKeyId: alias/aws/sqs
      MessageRetentionPeriod: 1209600  # 14 days
      Tags:
        - Key: Application
          Value: TodoApp
        - Key: Environment
          Value: !Ref Environment

  # IAM User for Application Access (Optional - for local development)
  TodoAppUser:
    Type: AWS::IAM::User
    Properties:
      UserName: !Sub 'todo-app-user-${Environment}'
      ManagedPolicyArns:
        - !Ref TodoAppDynamoDBManagedPolicy
        - !Ref TodoAppS3ManagedPolicy
        - !Ref TodoAppSNSManagedPolicy
        - !Ref TodoAppSQSManagedPolicy
      Tags:
        - Key: Application
          Value: TodoApp
        - Key: Environment
          Value: !Ref Environment

  # IAM Managed Policy for DynamoDB Access
  TodoAppDynamoDBManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub 'TodoApp-DynamoDB-Policy-${Environment}'
      Description: 'Managed policy for DynamoDB access in Todo App'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
              - dynamodb:Scan
              - dynamodb:Query
              - dynamodb:DescribeTable
            Resource:
              - !GetAtt TodoItemsTable.Arn
              - !Sub '${TodoItemsTable.Arn}/index/*'

  # IAM Managed Policy for S3 Access
  TodoAppS3ManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub 'TodoApp-S3-Policy-${Environment}'
      Description: 'Managed policy for S3 access in Todo App'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - s3:PutObject
              - s3:PutObjectAcl
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:DeleteObject
            Resource:
              - !Sub '${TodoExportsBucket.Arn}/*'
          - Effect: Allow
            Action:
              - s3:ListBucket
            Resource:
              - !GetAtt TodoExportsBucket.Arn

  # IAM Managed Policy for SNS Access
  TodoAppSNSManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub 'TodoApp-SNS-Policy-${Environment}'
      Description: 'Managed policy for SNS access in Todo App'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - sns:Publish
            Resource:
              - !Ref TodoNotificationsTopic

  # IAM Managed Policy for SQS Access
  TodoAppSQSManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub 'TodoApp-SQS-Policy-${Environment}'
      Description: 'Managed policy for SQS access in Todo App'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - sqs:SendMessage
              - sqs:GetQueueAttributes
            Resource:
              - !GetAtt TodoExportsQueue.Arn

  # Access Key for the IAM User (for local development)
  TodoAppUserAccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref TodoAppUser

Outputs:
  DynamoDBTableName:
    Description: Name of the DynamoDB table
    Value: !Ref TodoItemsTable
    Export:
      Name: !Sub '${AWS::StackName}-DynamoDBTableName'

  S3ExportsBucketName:
    Description: Name of the S3 bucket for exports
    Value: !Ref TodoExportsBucket
    Export:
      Name: !Sub '${AWS::StackName}-Exports-S3BucketName'

  S3BuildsBucketName:
    Description: Name of the S3 bucket for holding application builds
    Value: !Ref TodoBuildsBucket
    Export:
      Name: !Sub '${AWS::StackName}-Builds-S3BucketName'

  SNSTopicArn:
    Description: ARN of the SNS Topic for notifications
    Value: !Ref TodoNotificationsTopic
    Export:
      Name: !Sub '${AWS::StackName}-SNSTopicArn'

  SNSTopicName:
    Description: Name of the SNS Topic for notifications
    Value: !GetAtt TodoNotificationsTopic.TopicName
    Export:
      Name: !Sub '${AWS::StackName}-SNSTopicName'

  SQSQueueUrl:
    Description: URL of the SQS Queue for exports
    Value: !Ref TodoExportsQueue
    Export:
      Name: !Sub '${AWS::StackName}-SQSQueueUrl'

  SQSQueueArn:
    Description: ARN of the SQS Queue for exports
    Value: !GetAtt TodoExportsQueue.Arn
    Export:
      Name: !Sub '${AWS::StackName}-SQSQueueArn'

  DynamoDBPolicyArn:
    Description: ARN of the DynamoDB managed policy
    Value: !Ref TodoAppDynamoDBManagedPolicy
    Export:
      Name: !Sub '${AWS::StackName}-DynamoDBPolicyArn'

  S3PolicyArn:
    Description: ARN of the S3 managed policy
    Value: !Ref TodoAppS3ManagedPolicy
    Export:
      Name: !Sub '${AWS::StackName}-S3PolicyArn'

  SNSPolicyArn:
    Description: ARN of the SNS managed policy
    Value: !Ref TodoAppSNSManagedPolicy
    Export:
      Name: !Sub '${AWS::StackName}-SNSPolicyArn'

  SQSPolicyArn:
    Description: ARN of the SQS managed policy
    Value: !Ref TodoAppSQSManagedPolicy
    Export:
      Name: !Sub '${AWS::StackName}-SQSPolicyArn'

  AccessKeyId:
    Description: Access Key ID for the Todo App User
    Value: !Ref TodoAppUserAccessKey
    Export:
      Name: !Sub '${AWS::StackName}-AccessKeyId'

  SecretAccessKey:
    Description: Secret Access Key for the Todo App User (SAVE THIS SECURELY!)
    Value: !GetAtt TodoAppUserAccessKey.SecretAccessKey
    Export:
      Name: !Sub '${AWS::StackName}-SecretAccessKey'

  Region:
    Description: AWS Region
    Value: !Ref AWS::Region
    Export:
      Name: !Sub '${AWS::StackName}-Region'

  Instructions:
    Description: Setup Instructions
    Value: !Sub |
      1. Save the AccessKeyId and SecretAccessKey securely
      2. Create a .env.local file in your Next.js project with:
         AWS_REGION=${AWS::Region}
         AWS_ACCESS_KEY_ID=[AccessKeyId from outputs]
         AWS_SECRET_ACCESS_KEY=[SecretAccessKey from outputs]
         DYNAMODB_TABLE_NAME=${TodoItemsTable}
         S3_BUCKET_NAME=${TodoExportsBucket}
         SNS_TOPIC_ARN=${TodoNotificationsTopic}
         SQS_QUEUE_URL=${TodoExportsQueue}
